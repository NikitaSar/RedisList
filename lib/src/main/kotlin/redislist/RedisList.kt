/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package redislist

import redis.clients.jedis.commands.JedisCommands

class RedisList<T>(
    private val listKey: String,
    private val jedis: JedisCommands
) : MutableList<T> {


    override val size: Int
        get() = jedis.llen(listKey).toInt()

    override fun contains(element: T): Boolean {
        TODO("Not yet implemented")
    }

    override fun containsAll(elements: Collection<T>): Boolean {
        TODO("Not yet implemented")
    }

    @Suppress("UNCHECKED_CAST")
    override fun get(index: Int): T {
        val script = """
            return redis.call('lindex', KEYS[1], KEYS[2])    
        """
        return jedis.eval(script, 2, listKey, index.toString()) as T
    }

    override fun indexOf(element: T): Int {
        TODO("Not yet implemented")
    }

    override fun isEmpty() = size == 0

    override fun iterator() = object : MutableIterator<T> {
        var index = 0
        override fun hasNext() = index < size

        override fun next() = get(index++)

        override fun remove(): Unit {
            removeAt(index)
        }
    }

    override fun lastIndexOf(element: T): Int {
        TODO("Not yet implemented")
    }

    override fun add(element: T): Boolean {
        TODO("Not yet implemented")
    }

    override fun add(index: Int, element: T) {
        TODO("Not yet implemented")
    }

    override fun addAll(index: Int, elements: Collection<T>): Boolean {
        TODO("Not yet implemented")
    }

    override fun addAll(elements: Collection<T>): Boolean {
        TODO("Not yet implemented")
    }

    override fun clear() {
        TODO("Not yet implemented")
    }

    override fun listIterator(): MutableListIterator<T> {
        TODO("Not yet implemented")
    }

    override fun listIterator(index: Int): MutableListIterator<T> {
        TODO("Not yet implemented")
    }

    override fun remove(element: T): Boolean {
        return jedis.lrem(listKey, 1, element.toString()) != 0L
    }

    override fun removeAll(elements: Collection<T>): Boolean {
        TODO("Not yet implemented")
    }

    override fun removeAt(index: Int): T {
        val script = """
            local element = redis.call('LINDEX', KEYS[1], KEYS[2]);
            redis.call('LREM', KEYS[1], 1, element)
            return element
        """
        return jedis.eval(script, 2, listKey, index.toString()) as T
    }

    override fun retainAll(elements: Collection<T>): Boolean {
        TODO("Not yet implemented")
    }

    override fun set(index: Int, element: T): T {
        TODO("Not yet implemented")
    }

    override fun subList(fromIndex: Int, toIndex: Int): MutableList<T> {
        TODO("Not yet implemented")
    }
}
